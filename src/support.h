/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <gtk/gtk.h>


/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif

/* Definici√≥n principal de la esctructura de datos */
struct loswidgets
{
	GtkWidget *caja;
	GtkWidget *image4;
	GtkWidget *table1;
	GtkWidget *table2;
	GtkWidget *menubar;
	GtkWidget *radiobtncaja;
	GtkWidget *radiobtncajap;
	GtkWidget *radiobtncajafactura;
	GtkWidget *radiobtncajapcredito;
	GtkWidget *chkcajapedido;
	GtkWidget *fixed22;
	GtkWidget *label1294;
	GtkWidget *lblsubtotal;
	GtkWidget *label1296;
	GtkWidget *label1298;
	GtkWidget *lbliva15;
	GtkWidget *lbliva0;
	GtkWidget *lblantesdetotal;
	GtkWidget *lbltotal;
	GtkWidget *label1096;
	GtkWidget *lbldescuento;
	GtkWidget *lblpedido;
	GtkWidget *radioTipoVentaVenta;
	GtkWidget *radioTipoVentaPrueba;
	GtkWidget *radioTipoVentaVale;
	GtkWidget *radioTipoVentaConsumo;
	GtkWidget *fixed25;
	GtkWidget *scrolledwindow3;
	GtkWidget *btncajaok;
	GtkWidget *btncajacancelar;
	GtkWidget *image5;
	GtkWidget *image8;
	GtkWidget *btn_cajanuevocliente;
	GtkWidget *txttelefono;
	GtkWidget *label21;
	GtkWidget *scrolledConceptoVale;
	GtkWidget *btncaja_descuento;
	GtkWidget *label187;
	GtkWidget *label1048;
	GtkWidget *lblkilos;
	GtkWidget *lblpiezas;
	GtkWidget *label1167;
	GtkWidget *frame3;
}data;


/*
 * Public Functions.
 */

/*
 * This function returns a widget in a component created by Glade.
 * Call it with the toplevel widget in the component (i.e. a window/dialog),
 * or alternatively any widget in the component, and the name of the widget
 * you want returned.
 */
GtkWidget*  lookup_widget              (GtkWidget       *widget,
                                        const gchar     *widget_name);


/* Use this function to set the directory containing installed pixmaps. */
void        add_pixmap_directory       (const gchar     *directory);


/*
 * Private Functions.
 */

/* This is used to create the pixmaps used in the interface. */
GtkWidget*  create_pixmap              (GtkWidget       *widget,
                                        const gchar     *filename);

/* This is used to create the pixbufs used in the interface. */
GdkPixbuf*  create_pixbuf              (const gchar     *filename);

/* This is used to set ATK action descriptions. */
void        glade_set_atk_action_description (AtkAction       *action,
                                              const gchar     *action_name,
                                              const gchar     *description);

